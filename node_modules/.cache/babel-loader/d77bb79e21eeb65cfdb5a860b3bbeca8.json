{"ast":null,"code":"var _jsxFileName = \"/Users/chriscable/Desktop/new projects/retrofitting projects/tictactoe/tictactoe/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport ChoosePlayers from './components/choosePlayers.js';\nimport ChooseXorO from './components/chooseXorO.js';\nimport Grid from './components/grid.js';\nimport Login from './components/login.js';\nimport Signup from './components/signup.js';\nimport WelcomePage from './components/welcomePage.js';\nimport UserHomePage from './components/userHomepage.js';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      hasChosenMode: false,\n      hasChosenXorO: false,\n      toggleGrid: false,\n      setX: false,\n      setO: false,\n      clickedLogin: false,\n      clickedSignup: false,\n      currentUser: {},\n      atWelcomePage: true\n    };\n    this.chooseNumberOfPlayers = this.chooseNumberOfPlayers.bind(this);\n    this.chooseXorO = this.chooseXorO.bind(this);\n    this.resetAll = this.resetAll.bind(this);\n    this.chooseX = this.chooseX.bind(this);\n    this.chooseO = this.chooseO.bind(this);\n    this.clickedLogin = this.clickedLogin.bind(this);\n    this.clickedSignup = this.clickedSignup.bind(this);\n    this.returnToHomepage = this.returnToHomepage.bind(this);\n    this.loginUser = this.loginUser.bind(this);\n    this.setCurrentUser = this.setCurrentUser.bind(this);\n    this.logoutUser = this.logoutUser.bind(this); // this.renderWelcomePage = this.renderWelcomePage.bind(this)\n  } // loginUser(user){\n  //   fetch(\"http://localhost:3001/login\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"content-type\": \"application/json\"\n  //     },\n  //     body: JSON.stringify({\n  //       email: user.email,\n  //       password: user.password\n  //     })\n  //   })\n  //   .then(res => res.json())\n  //   .then(data => {\n  //     this.setCurrentUser(data)\n  //   })\n  // }\n  // setCurrentUser(data){\n  //   this.setState({\n  //     currentUser: data.user\n  //   })\n  //   if(data.jwt){localStorage.token = data.jwt}\n  //   console.log(localStorage.token)\n  // }\n\n\n  renderChoosePlayers() {\n    if (this.state.hasChosenMode === false) {\n      return /*#__PURE__*/React.createElement(ChoosePlayers, {\n        choose: this.chooseNumberOfPlayers,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n  chooseNumberOfPlayers() {\n    this.setState({\n      hasChosenMode: true,\n      hasChosenXorO: true\n    });\n  }\n\n  renderChooseXorO() {\n    if (this.state.hasChosenXorO === true) {\n      return /*#__PURE__*/React.createElement(ChooseXorO, {\n        choose: this.chooseXorO,\n        chooseX: this.chooseX,\n        chooseO: this.chooseO,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n  chooseXorO() {\n    this.setState({\n      hasChosenXorO: false,\n      toggleGrid: true\n    });\n  }\n\n  chooseX() {\n    console.log(\"hello x\");\n    this.setState({\n      hasChosenXorO: false,\n      toggleGrid: true,\n      setX: true\n    });\n  }\n\n  chooseO() {\n    console.log(\"hello o\");\n    this.setState({\n      hasChosenXorO: false,\n      toggleGrid: true,\n      setO: true\n    });\n  }\n\n  renderGrid() {\n    if (this.state.toggleGrid === true) {\n      return /*#__PURE__*/React.createElement(Grid, {\n        reset: this.resetAll,\n        setX: this.state.setX,\n        setO: this.state.setO,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n  resetAll() {\n    console.log(\"hello\");\n    this.setState({\n      toggleGrid: false,\n      hasChosenMode: false\n    });\n  } // login(){\n  //   this.setState({\n  //     clickedLogin: true,\n  //     hasChosenMode: true\n  //   })\n  // }\n  // renderLogin(){\n  //   if(this.state.clickedLogin === true){\n  //     return(\n  //       <Login homepage={this.returnToHomepage}\n  //              loginUser={this.loginUser}\n  //         />\n  //     )\n  //   }\n  // }\n  // signup(){\n  //   this.setState({\n  //     clickedSignup: true,\n  //     hasChosenMode: true\n  //   })\n  // }\n  // renderSignup(){\n  //   if(this.state.clickedSignup === true){\n  //     return(\n  //       <Signup homepage={this.returnToHomepage}/>\n  //     )\n  //   }\n  // }\n  // returnToHomepage(){\n  //   this.setState({\n  //     clickedLogin: false,\n  //     clickedSignup: false,\n  //     hasChosenMode: false\n  //   })\n  // }\n  ///////////////////////New stuff////////////////////////////\n\n\n  renderWelcomePage() {\n    if (this.state.atWelcomePage === true) {\n      return /*#__PURE__*/React.createElement(WelcomePage, {\n        clickedLogin: this.clickedLogin,\n        clickedSignup: this.clickedSignup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 50\n        }\n      });\n    }\n  }\n\n  clickedLogin() {\n    console.log(\"hello\");\n    this.setState({\n      clickedLogin: true,\n      atWelcomePage: false // hasChosenMode: true\n\n    });\n  }\n\n  renderLoginPage() {\n    if (this.state.clickedLogin === true) {\n      return /*#__PURE__*/React.createElement(Login, {\n        homepage: this.returnToHomepage,\n        loginUser: this.loginUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }\n      });\n    }\n  }\n\n  loginUser(user) {\n    fetch(\"http://localhost:3001/login\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: user.email,\n        password: user.password\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.error) {\n        alert(\"wrong login information\");\n      } else {\n        this.setCurrentUser(data);\n      }\n    });\n  }\n\n  logoutUser() {\n    this.setState({\n      currentuser: {}\n    });\n    delete localStorage.token;\n    this.returnToHomepage();\n    console.log(this.state.currentUser);\n  }\n\n  setCurrentUser(data) {\n    this.setState({\n      currentUser: data.user\n    });\n\n    if (data.jwt) {\n      localStorage.token = data.jwt;\n    }\n  }\n\n  renderUserPage() {\n    if (this.state.currentUser.username) {\n      return /*#__PURE__*/React.createElement(UserHomePage, {\n        user: this.state.currentUser,\n        logout: this.logoutUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.clickedLogin === true) {\n      this.setState({\n        clickedLogin: false\n      });\n    }\n  } //have to have both \"prevProps, prevState\" in the args otherwise if you just have one\n  //then it just gives an empty object\n\n\n  clickedSignup() {\n    this.setState({\n      clickedSignup: true,\n      atWelcomePage: false // hasChosenMode: true\n\n    });\n  }\n\n  renderSignupPage() {\n    if (this.state.clickedSignup === true) {\n      return /*#__PURE__*/React.createElement(Signup, {\n        homepage: this.returnToHomepage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 9\n        }\n      });\n    }\n  }\n\n  returnToHomepage() {\n    this.setState({\n      clickedLogin: false,\n      clickedSignup: false,\n      atWelcomePage: true\n    });\n  } /////////////////////////////////////////////////////////////\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"innerDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 5\n      }\n    }, this.renderWelcomePage(), this.renderLoginPage(), this.renderSignupPage(), this.renderUserPage())));\n  }\n\n}\n\nexport default App; //////////////////temporary///////////////////////\n// {this.renderChoosePlayers()}\n// {this.renderChooseXorO()}\n// {this.renderLogin()}\n// {this.renderSignup()}\n// {this.renderGrid()}","map":{"version":3,"sources":["/Users/chriscable/Desktop/new projects/retrofitting projects/tictactoe/tictactoe/src/App.js"],"names":["React","ChoosePlayers","ChooseXorO","Grid","Login","Signup","WelcomePage","UserHomePage","App","Component","constructor","state","hasChosenMode","hasChosenXorO","toggleGrid","setX","setO","clickedLogin","clickedSignup","currentUser","atWelcomePage","chooseNumberOfPlayers","bind","chooseXorO","resetAll","chooseX","chooseO","returnToHomepage","loginUser","setCurrentUser","logoutUser","renderChoosePlayers","setState","renderChooseXorO","console","log","renderGrid","renderWelcomePage","renderLoginPage","user","fetch","method","headers","body","JSON","stringify","email","password","then","res","json","data","error","alert","currentuser","localStorage","token","jwt","renderUserPage","username","componentDidUpdate","prevProps","prevState","renderSignupPage","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ChoosePlayers from './components/choosePlayers.js'\nimport ChooseXorO from './components/chooseXorO.js'\nimport Grid from './components/grid.js'\nimport Login from './components/login.js'\nimport Signup from './components/signup.js'\nimport WelcomePage from './components/welcomePage.js'\nimport UserHomePage from './components/userHomepage.js'\n\nclass App extends React.Component {\n\n  constructor(){\n    super()\n\n    this.state = {\n      hasChosenMode: false,\n      hasChosenXorO: false,\n      toggleGrid: false,\n      setX: false,\n      setO: false,\n      clickedLogin: false,\n      clickedSignup: false,\n      currentUser: {},\n      atWelcomePage: true\n    }\n    this.chooseNumberOfPlayers = this.chooseNumberOfPlayers.bind(this)\n    this.chooseXorO = this.chooseXorO.bind(this)\n    this.resetAll = this.resetAll.bind(this)\n    this.chooseX = this.chooseX.bind(this)\n    this.chooseO = this.chooseO.bind(this)\n    this.clickedLogin = this.clickedLogin.bind(this)\n    this.clickedSignup = this.clickedSignup.bind(this)\n    this.returnToHomepage = this.returnToHomepage.bind(this)\n    this.loginUser = this.loginUser.bind(this)\n    this.setCurrentUser = this.setCurrentUser.bind(this)\n    this.logoutUser = this.logoutUser.bind(this)\n    // this.renderWelcomePage = this.renderWelcomePage.bind(this)\n  }\n\n\n  // loginUser(user){\n  //   fetch(\"http://localhost:3001/login\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"content-type\": \"application/json\"\n  //     },\n  //     body: JSON.stringify({\n  //       email: user.email,\n  //       password: user.password\n  //     })\n  //   })\n  //   .then(res => res.json())\n  //   .then(data => {\n  //     this.setCurrentUser(data)\n  //   })\n  // }\n\n  // setCurrentUser(data){\n  //   this.setState({\n  //     currentUser: data.user\n  //   })\n  //   if(data.jwt){localStorage.token = data.jwt}\n  //   console.log(localStorage.token)\n  // }\n\n  renderChoosePlayers(){\n    if(this.state.hasChosenMode === false){\n      return <ChoosePlayers choose={this.chooseNumberOfPlayers}/>\n    }\n  }\n\n  chooseNumberOfPlayers(){\n    this.setState({\n      hasChosenMode: true,\n      hasChosenXorO: true\n    })\n  }\n\n  renderChooseXorO(){\n    if(this.state.hasChosenXorO === true){\n      return <ChooseXorO choose={this.chooseXorO} chooseX={this.chooseX} chooseO={this.chooseO}/>\n    }\n  }\n\n  chooseXorO(){\n    this.setState({\n      hasChosenXorO: false,\n      toggleGrid: true\n    })\n  }\n\n  chooseX(){\n    console.log(\"hello x\")\n    this.setState({\n      hasChosenXorO: false,\n      toggleGrid: true,\n      setX: true\n    })\n  }\n\n  chooseO(){\n    console.log(\"hello o\")\n    this.setState({\n      hasChosenXorO: false,\n      toggleGrid: true,\n      setO: true\n    })\n  }\n\n\n  renderGrid(){\n    if(this.state.toggleGrid === true){\n      return <Grid reset={this.resetAll} setX={this.state.setX} setO={this.state.setO}/>\n    }\n  }\n\n  resetAll(){\n    console.log(\"hello\")\n    this.setState({\n      toggleGrid: false,\n      hasChosenMode: false\n    })\n  }\n\n  // login(){\n  //   this.setState({\n  //     clickedLogin: true,\n  //     hasChosenMode: true\n  //   })\n  // }\n\n  // renderLogin(){\n  //   if(this.state.clickedLogin === true){\n  //     return(\n  //       <Login homepage={this.returnToHomepage}\n  //              loginUser={this.loginUser}\n  //         />\n  //     )\n  //   }\n  // }\n\n  // signup(){\n  //   this.setState({\n  //     clickedSignup: true,\n  //     hasChosenMode: true\n  //   })\n  // }\n\n  // renderSignup(){\n  //   if(this.state.clickedSignup === true){\n  //     return(\n  //       <Signup homepage={this.returnToHomepage}/>\n  //     )\n  //   }\n  // }\n\n  // returnToHomepage(){\n  //   this.setState({\n  //     clickedLogin: false,\n  //     clickedSignup: false,\n  //     hasChosenMode: false\n  //   })\n  // }\n\n  ///////////////////////New stuff////////////////////////////\n  renderWelcomePage(){\n    if(this.state.atWelcomePage === true){return <WelcomePage\n                                                  clickedLogin={this.clickedLogin}\n                                                  clickedSignup={this.clickedSignup}\n                                                  />}\n  }\n\n  clickedLogin(){\n    console.log(\"hello\")\n    this.setState({\n      clickedLogin: true,\n      atWelcomePage: false\n      // hasChosenMode: true\n    })\n  }\n\n  renderLoginPage(){\n    if(this.state.clickedLogin === true){\n      return(\n        <Login homepage={this.returnToHomepage}\n               loginUser={this.loginUser}\n          />\n      )\n    }\n  }\n\n  loginUser(user){\n    fetch(\"http://localhost:3001/login\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: user.email,\n        password: user.password\n      })\n    })\n    .then(res => res.json())\n    .then(data => {\n      if(data.error){\n        alert(\"wrong login information\")\n      } else {\n      this.setCurrentUser(data)\n    }\n    })\n  }\n\n  logoutUser(){\n    this.setState({\n    currentuser: {}\n  })\n  delete localStorage.token\n  this.returnToHomepage()\n  console.log(this.state.currentUser)\n  }\n\n  setCurrentUser(data){\n    this.setState({\n      currentUser: data.user\n    })\n    if(data.jwt){localStorage.token = data.jwt}\n  }\n\n  renderUserPage(){\n    if(this.state.currentUser.username){\n      return <UserHomePage user={this.state.currentUser} logout={this.logoutUser}/>\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if(prevState.clickedLogin === true){\n      this.setState({\n        clickedLogin: false\n      })\n    }\n  }\n  //have to have both \"prevProps, prevState\" in the args otherwise if you just have one\n  //then it just gives an empty object\n\n  clickedSignup(){\n    this.setState({\n      clickedSignup: true,\n      atWelcomePage: false\n      // hasChosenMode: true\n    })\n  }\n\n  renderSignupPage(){\n    if(this.state.clickedSignup === true){\n      return(\n        <Signup homepage={this.returnToHomepage}/>\n      )\n    }\n  }\n\n  returnToHomepage(){\n    this.setState({\n      clickedLogin: false,\n      clickedSignup: false,\n      atWelcomePage: true\n    })\n  }\n\n\n\n  /////////////////////////////////////////////////////////////\n\n  render(){\n  return (\n    <div className=\"App\">\n    <div className=\"mainDiv\">\n    <div className=\"innerDiv\">\n    {this.renderWelcomePage()}\n    {this.renderLoginPage()}\n    {this.renderSignupPage()}\n    {this.renderUserPage()}\n    </div>\n    </div>\n    </div>\n  );\n}\n}\n\nexport default App;\n\n//////////////////temporary///////////////////////\n\n// {this.renderChoosePlayers()}\n// {this.renderChooseXorO()}\n// {this.renderLogin()}\n// {this.renderSignup()}\n// {this.renderGrid()}\n"]},"metadata":{},"sourceType":"module"}
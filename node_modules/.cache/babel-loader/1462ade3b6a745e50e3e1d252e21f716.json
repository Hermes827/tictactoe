{"ast":null,"code":"var _jsxFileName = \"/Users/chriscable/Desktop/new projects/do projects later/tictactoe/tictactoe/tictactoe/src/components/grid.js\";\nimport React from 'react';\nconst winningCombinations = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [1, 4, 7], [2, 5, 8], [3, 6, 9], [1, 5, 9], [3, 5, 7]];\n\nclass Grid extends React.Component {\n  constructor() {\n    super();\n\n    this.computerTurn = () => {\n      setTimeout(function () {\n        if (this.state.currentComputer === false || this.state.computerCellClicks.length === 3) {\n          return;\n        }\n\n        console.log(\"hello\"); // let cell = e.target\n\n        let random = Math.floor(Math.random() * 10);\n        const divArr = document.querySelectorAll(\"div.grid\");\n\n        if (divArr[random].innerHTML === \"X\" || divArr[random].innerHTML === \"O\") {\n          this.computerTurn();\n        } else {\n          divArr[random].innerHTML = \"O\";\n          this.setState({\n            computerCellClicks: [...this.state.computerCellClicks, parseInt(divArr[random].id)],\n            currentComputer: false,\n            currentPlayer: true\n          });\n        }\n      }, 1000);\n    };\n\n    this.state = {\n      playerScore: 0,\n      computerScore: 0,\n      playerCellClicks: [],\n      computerCellClicks: [],\n      cellContent: \"\",\n      currentPlayer: false,\n      currentComputer: false\n    };\n    this.clickedCell = this.clickedCell.bind(this);\n  } // clearScoreAndReset(){\n  //   this.props.reset()\n  //   this.setState({\n  //     playerScore: 0,\n  //     computerScore: 0\n  //   })\n  // }\n\n\n  componentDidMount() {\n    let random = Math.floor(Math.random() * 11);\n    console.log(random);\n\n    if (random <= 5) {\n      this.setState({\n        currentPlayer: true\n      });\n    } else {\n      this.setState({\n        currentComputer: true\n      });\n    }\n  }\n\n  clickedCell(e) {\n    if (this.state.playerCellClicks.length === 3 || this.state.currentPlayer === false) {\n      return;\n    }\n\n    let cell = e.target;\n\n    if (cell.innerHTML === \"X\" || cell.innerHTML === \"O\") {\n      return;\n    }\n\n    cell.innerHTML = \"X\";\n    this.setState({\n      playerCellClicks: [...this.state.playerCellClicks, parseInt(cell.id)],\n      currentPlayer: false,\n      currentComputer: true\n    });\n  }\n\n  isWinner() {\n    if (this.state.playerCellClicks.length === 3) {\n      for (let i = 0; i <= winningCombinations.length; i++) {\n        if (JSON.stringify(this.state.playerCellClicks) === JSON.stringify(winningCombinations[i])) {\n          console.log(\"winner\");\n          console.log(this.state.playerCellClicks);\n        }\n      }\n    }\n  } // displayDivArr(){\n  //   let random = Math.floor(Math.random()*10)\n  //   const divArr = document.querySelectorAll(\"div.grid\")\n  //   if(divArr.length > 0){\n  //     console.log(divArr[random].id)\n  //   }\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridMainDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p1Banner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }\n    }, this.state.playerScore, \" Player 1\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"computerBanner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }\n    }, this.state.computerScore, \" Computer\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"resetBanner\",\n      onClick: this.props.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }\n    }, \"Reset All\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridInnerDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gridDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      id: \"1\",\n      onClick: this.clickedCell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      id: \"2\",\n      onClick: this.clickedCell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      id: \"3\",\n      onClick: this.clickedCell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      id: \"4\",\n      onClick: this.clickedCell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      id: \"5\",\n      onClick: this.clickedCell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      id: \"6\",\n      onClick: this.clickedCell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      id: \"7\",\n      onClick: this.clickedCell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      id: \"8\",\n      onClick: this.clickedCell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      id: \"9\",\n      onClick: this.clickedCell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }\n    }))), this.isWinner(), this.computerTurn());\n  }\n\n}\n\nexport default Grid;","map":{"version":3,"sources":["/Users/chriscable/Desktop/new projects/do projects later/tictactoe/tictactoe/tictactoe/src/components/grid.js"],"names":["React","winningCombinations","Grid","Component","constructor","computerTurn","setTimeout","state","currentComputer","computerCellClicks","length","console","log","random","Math","floor","divArr","document","querySelectorAll","innerHTML","setState","parseInt","id","currentPlayer","playerScore","computerScore","playerCellClicks","cellContent","clickedCell","bind","componentDidMount","e","cell","target","isWinner","i","JSON","stringify","render","props","reset"],"mappings":"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","sourcesContent":["import React from 'react';\nconst winningCombinations = [[1,2,3],[4,5,6],[7,8,9],[1,4,7],[2,5,8],[3,6,9],[1,5,9],[3,5,7]]\n\nclass Grid extends React.Component {\n\n  constructor(){\n    super()\n\n    this.state = {\n      playerScore: 0,\n      computerScore: 0,\n      playerCellClicks: [],\n      computerCellClicks: [],\n      cellContent: \"\",\n      currentPlayer: false,\n      currentComputer: false\n    }\n    this.clickedCell = this.clickedCell.bind(this)\n  }\n\n  // clearScoreAndReset(){\n  //   this.props.reset()\n  //   this.setState({\n  //     playerScore: 0,\n  //     computerScore: 0\n  //   })\n  // }\n  componentDidMount(){\n    let random = Math.floor(Math.random()*11)\n    console.log(random)\n    if(random <= 5){\n      this.setState({\n        currentPlayer: true\n      })\n    } else {\n      this.setState({\n        currentComputer: true\n      })\n    }\n  }\n\n  clickedCell(e){\n    if(this.state.playerCellClicks.length === 3 || this.state.currentPlayer === false){return}\n    let cell = e.target\n    if(cell.innerHTML === \"X\" || cell.innerHTML === \"O\"){return}\n    cell.innerHTML = \"X\"\n    this.setState({\n      playerCellClicks: [...this.state.playerCellClicks, parseInt(cell.id)],\n      currentPlayer: false,\n      currentComputer: true\n    })\n  }\n\n  computerTurn = () => {\n    setTimeout(function(){\n    if(this.state.currentComputer === false || this.state.computerCellClicks.length === 3){return}\n    console.log(\"hello\")\n    // let cell = e.target\n    let random = Math.floor(Math.random()*10)\n    const divArr = document.querySelectorAll(\"div.grid\")\n    if(divArr[random].innerHTML === \"X\" || divArr[random].innerHTML === \"O\"){\n      this.computerTurn()\n    } else {\n    divArr[random].innerHTML = \"O\"\n    this.setState({\n      computerCellClicks: [...this.state.computerCellClicks, parseInt(divArr[random].id)],\n      currentComputer: false,\n      currentPlayer: true\n    })\n    }\n    }, 1000)\n  }\n\n  isWinner(){\n    if(this.state.playerCellClicks.length === 3){\n      for(let i=0;i<=winningCombinations.length;i++){\n        if(JSON.stringify(this.state.playerCellClicks) === JSON.stringify(winningCombinations[i])){\n          console.log(\"winner\")\n          console.log(this.state.playerCellClicks)\n        }\n      }\n    }\n    }\n\n    // displayDivArr(){\n    //   let random = Math.floor(Math.random()*10)\n    //   const divArr = document.querySelectorAll(\"div.grid\")\n    //   if(divArr.length > 0){\n    //     console.log(divArr[random].id)\n    //   }\n    // }\n\n  render(){\n\n  return (\n    <div className=\"gridMainDiv\">\n    <div className=\"p1Banner\">{this.state.playerScore} Player 1</div>\n    <div className=\"computerBanner\">{this.state.computerScore} Computer</div>\n    <div className=\"resetBanner\" onClick={this.props.reset}>Reset All</div>\n    <div className=\"gridInnerDiv\">\n    <div className=\"gridDiv\">\n    <div className=\"grid\" id=\"1\" onClick={this.clickedCell}></div>\n    <div className=\"grid\" id=\"2\" onClick={this.clickedCell}></div>\n    <div className=\"grid\" id=\"3\" onClick={this.clickedCell}></div>\n    <div className=\"grid\" id=\"4\" onClick={this.clickedCell}></div>\n    <div className=\"grid\" id=\"5\" onClick={this.clickedCell}></div>\n    <div className=\"grid\" id=\"6\" onClick={this.clickedCell}></div>\n    <div className=\"grid\" id=\"7\" onClick={this.clickedCell}></div>\n    <div className=\"grid\" id=\"8\" onClick={this.clickedCell}></div>\n    <div className=\"grid\" id=\"9\" onClick={this.clickedCell}></div>\n    </div>\n    </div>\n    {this.isWinner()}\n    {this.computerTurn()}\n    </div>\n  );\n}\n}\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}